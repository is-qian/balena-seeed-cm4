From c7109f88e4d2a16a840651f7217e6c33f1e68910 Mon Sep 17 00:00:00 2001
From: bigbearishappy <953308023@qq.com>
Date: Fri, 27 Aug 2021 09:48:26 +0000
Subject: [PATCH] yocto lvgl display input rotate

---
 lv_conf.h     |  6 +++---
 lv_drv_conf.h |  2 +-
 main.c        | 16 ++++++++++++++--
 3 files changed, 18 insertions(+), 6 deletions(-)

diff --git a/lv_conf.h b/lv_conf.h
index 976ea62..79e013b 100644
--- a/lv_conf.h
+++ b/lv_conf.h
@@ -21,7 +21,7 @@
  *====================*/
 
 /*Color depth: 1 (1 byte per pixel), 8 (RGB332), 16 (RGB565), 32 (ARGB8888)*/
-#define LV_COLOR_DEPTH     32
+#define LV_COLOR_DEPTH     16
 
 /*Swap the 2 bytes of RGB565 color. Useful if the display has a 8 bit interface (e.g. SPI)*/
 #define LV_COLOR_16_SWAP   0
@@ -42,7 +42,7 @@
 #define LV_MEM_CUSTOM      0
 #if LV_MEM_CUSTOM == 0
 /*Size of the memory available for `lv_mem_alloc()` in bytes (>= 2kB)*/
-#  define LV_MEM_SIZE    (128U * 1024U)          /*[bytes]*/
+#  define LV_MEM_SIZE    (2128U * 1024U)          /*[bytes]*/
 
 /*Set an address for the memory pool instead of allocating it as a normal array. Can be in external SRAM too.*/
 #  define LV_MEM_ADR          0     /*0: unused*/
@@ -106,7 +106,7 @@ uint32_t custom_tick_get(void);
 #define LV_IMG_CACHE_DEF_SIZE       0
 
 /*Maximum buffer size to allocate for rotation. Only used if software rotation is enabled in the display driver.*/
-#define LV_DISP_ROT_MAX_BUF         (10*1024)
+#define LV_DISP_ROT_MAX_BUF         (2000*1024)
 /*-------------
  * GPU
  *-----------*/
diff --git a/lv_drv_conf.h b/lv_drv_conf.h
index 5d5fa1d..d4870d1 100644
--- a/lv_drv_conf.h
+++ b/lv_drv_conf.h
@@ -375,7 +375,7 @@
  * Touchscreen as libinput interface (for Linux based systems)
  *------------------------------------------------*/
 #ifndef USE_LIBINPUT
-#  define USE_LIBINPUT           0
+#  define USE_LIBINPUT          1 
 #endif
 
 #if USE_LIBINPUT
diff --git a/main.c b/main.c
index ec63165..2fcde43 100644
--- a/main.c
+++ b/main.c
@@ -1,5 +1,6 @@
 #include "lvgl/lvgl.h"
 #include "lv_drivers/display/fbdev.h"
+#include "lv_drivers/indev/libinput_drv.h"
 #include "lv_demos/lv_demo.h"
 #include <unistd.h>
 #include <pthread.h>
@@ -16,6 +17,8 @@ int main(void)
     /*Linux frame buffer device init*/
     fbdev_init();
 
+    libinput_init();
+
     /*A small buffer for LittlevGL to draw the screen's content*/
     static lv_color_t buf[DISP_BUF_SIZE];
 
@@ -28,10 +31,19 @@ int main(void)
     lv_disp_drv_init(&disp_drv);
     disp_drv.draw_buf   = &disp_buf;
     disp_drv.flush_cb   = fbdev_flush;
-    disp_drv.hor_res    = 800;
-    disp_drv.ver_res    = 480;
+    disp_drv.hor_res    = 720;
+    disp_drv.ver_res    = 1280;
+    disp_drv.sw_rotate    = 1;
+    disp_drv.rotated    = LV_DISP_ROT_270;
     lv_disp_drv_register(&disp_drv);
 
+    /*Initialize and register an input device*/
+    static lv_indev_drv_t indev_drv;
+    lv_indev_drv_init(&indev_drv);          /*Basic initialization*/
+    indev_drv.type = LV_INDEV_TYPE_POINTER;
+    indev_drv.read_cb = libinput_read;         /*This function will be called periodically (by the library) to get the mouse position and state*/
+    lv_indev_drv_register(&indev_drv);
+
     /*Create a Demo*/
     lv_demo_widgets();
 
-- 
2.25.1

